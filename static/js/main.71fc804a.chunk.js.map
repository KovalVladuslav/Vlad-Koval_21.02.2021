{"version":3,"sources":["components/ButtonStar.module.scss","components/ModalMovieCard.module.scss","components/HeaderFavoriteList.module.scss","components/MoviesGallery.module.scss","components/FavoriteListComponent.module.scss","image/close-icon.svg","lib.ts","components/ButtonStar.tsx","components/ModalMovieCard.tsx","components/MoviesGallery.tsx","components/FavoriteListComponent.tsx","components/HeaderFavoriteList.tsx","App.tsx","index.tsx"],"names":["module","exports","setInLocalStorage","name","active","saved","JSON","parse","localStorage","getItem","Object","keys","length","setItem","stringify","changedActive","ButtonStar","setAllMovies","id","allMovies","position","modal","useState","activeModal","setActiveModal","handleFavoriteFilm","event","stopPropagation","prevState","updateMovie","map","movie","className","styles","star","star_active","star_inactive","star_absolute","onClick","ModalMovieCard","setIsShowModal","isShowModal","currentShowMovie","handleCloseModal","Modal","show","onHide","centered","dialogClassName","modal_wrapper","src","closeIconPath","role","tabIndex","alt","modal_close","img","modal_image","description","modal_year","year","modal_genres","genres","genre","index","modal_people","director","starring","actor","array","MoviesGallery","filterGenre","filterMovie","setCurrentShowMovie","wrapper","movie_block","movie_card","foundMovieFromId","find","handleOpenModal","FavoriteListComponent","item","favorite_item","favorite_item_delete","handleDeleteFavoriteFilm","CustomToggle","children","eventKey","decoratedOnClick","useAccordionToggle","accordion_button","HeaderFavoriteList","activeFavoriteMovies","setActiveFavoriteMovies","useEffect","foundActive","filter","header","Accordion","accordion","Collapse","accordion_list_wrapper","accordion_list","accordion_item_delete","App","setErrorMessage","setGenres","setFilterGenre","emptySaved","fetch","then","res","json","data","favorite","foundGenres","movies","Set","forEach","add","Array","from","getAllGenres","processingData","catch","Container","Row","Col","lg","xl","DropdownButton","variant","title","size","Dropdown","Item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71fc804a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"star\":\"ButtonStar_star__3br69\",\"star_absolute\":\"ButtonStar_star_absolute__2y4IG\",\"star_active\":\"ButtonStar_star_active__1iI7N\",\"star_inactive\":\"ButtonStar_star_inactive__179T1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal_wrapper\":\"ModalMovieCard_modal_wrapper__3v2i0\",\"modal\":\"ModalMovieCard_modal__3DjSO\",\"modal_close\":\"ModalMovieCard_modal_close__lvW5w\",\"modal_image\":\"ModalMovieCard_modal_image__K2Yxo\",\"modal_year\":\"ModalMovieCard_modal_year__26cZL\",\"modal_genres\":\"ModalMovieCard_modal_genres__2WfOq\",\"modal_people\":\"ModalMovieCard_modal_people__13BJO\",\"active\":\"ModalMovieCard_active__3h0yy\",\"inactive\":\"ModalMovieCard_inactive__aCwY6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"HeaderFavoriteList_header__Nru30\",\"accordion\":\"HeaderFavoriteList_accordion__3YnuK\",\"accordion_button\":\"HeaderFavoriteList_accordion_button__1RWbi\",\"accordion_list\":\"HeaderFavoriteList_accordion_list__225oR\",\"accordion_list_wrapper\":\"HeaderFavoriteList_accordion_list_wrapper__2Auib\",\"accordion_item_delete\":\"HeaderFavoriteList_accordion_item_delete__IAr-V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MoviesGallery_wrapper__1P9E6\",\"movie_block\":\"MoviesGallery_movie_block__cYCLh\",\"movie_card\":\"MoviesGallery_movie_card__3atFg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FavoriteListComponent_wrapper__2wKij\",\"favorite_item\":\"FavoriteListComponent_favorite_item__1GG3e\",\"favorite_item_delete\":\"FavoriteListComponent_favorite_item_delete__wU8Bo\"};","export default __webpack_public_path__ + \"static/media/close-icon.2fe5f259.svg\";","import { IMovie, ILocalStorageFavorite } from './interface'\r\n\r\nexport const mergeMovies = (movies:IMovie[], favorite:ILocalStorageFavorite) => {\r\n  return movies.map(movie => (\r\n    {\r\n      ...movie,\r\n      active: favorite[movie.name]\r\n    }\r\n  ))\r\n}\r\n\r\nexport const setInLocalStorage = (name: string, active: boolean) => {\r\n  const saved = JSON.parse(localStorage.getItem('favoriteList') || '{}')\r\n\r\n  const emptySaved = !(Object.keys(saved).length)\r\n\r\n  if (emptySaved) {\r\n    localStorage.setItem('favoriteList', JSON.stringify({\r\n      [name]: active\r\n    }))\r\n  } else {\r\n    let changedActive = {...saved}\r\n    if (active) {\r\n      changedActive[name] = active\r\n    } else {\r\n      delete changedActive[name]\r\n    }\r\n    localStorage.setItem('favoriteList', JSON.stringify(changedActive))\r\n  }\r\n}\r\n\r\nexport const getAllGenres = (movies:IMovie[]) => {\r\n  const genres = new Set()\r\n\r\n  movies.forEach(movie => {\r\n    movie.genres.forEach(genre => {\r\n      genres.add(genre)\r\n    })\r\n  })\r\n\r\n  return Array.from(genres)\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport { setInLocalStorage } from '../lib'\r\n\r\nimport { IMovie } from '../interface'\r\n\r\nimport styles from './ButtonStar.module.scss'\r\n\r\ninterface IButtonStarProps {\r\n  setAllMovies(arg:IMovie[]): void\r\n  active?: boolean\r\n  id?: number\r\n  allMovies: IMovie[]\r\n  position?: string\r\n  modal?: boolean\r\n}\r\n\r\nconst ButtonStar: React.FC<IButtonStarProps> = ({ setAllMovies, active, id, allMovies, position, modal}) => {\r\n  const [activeModal, setActiveModal] = useState<any>(active)\r\n\r\n  const handleFavoriteFilm = (event: React.MouseEvent) => {\r\n    event.stopPropagation()\r\n\r\n    if (modal) {\r\n      setActiveModal((prevState:boolean) => setActiveModal(!prevState))\r\n    }\r\n\r\n    const updateMovie = allMovies.map(movie => {\r\n      if (movie.id === id) {\r\n        setInLocalStorage(movie.name, !movie.active)\r\n        return {\r\n          ...movie,\r\n          active: !movie.active\r\n        }\r\n      }\r\n      return movie\r\n    })\r\n\r\n    setAllMovies(updateMovie)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {modal ? (\r\n        <button\r\n          className={`${styles.star} ${activeModal? styles.star_active : styles.star_inactive} ${position === 'absolute'? styles.star_absolute : ''}`}\r\n          onClick={handleFavoriteFilm}\r\n        />\r\n      ) : (\r\n        <button\r\n          className={`${styles.star} ${active? styles.star_active : styles.star_inactive} ${position === 'absolute'? styles.star_absolute : ''}`}\r\n          onClick={handleFavoriteFilm}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ButtonStar\r\n","import React from 'react'\r\n\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport { IMovie } from '../interface'\r\n\r\nimport closeIconPath from '../image/close-icon.svg'\r\nimport styles from './ModalMovieCard.module.scss'\r\nimport ButtonStar from './ButtonStar'\r\n\r\ninterface IModalMovieCardProps {\r\n  setIsShowModal(arg: boolean): void\r\n  isShowModal: boolean\r\n  currentShowMovie: Partial<IMovie>\r\n  setAllMovies(arg: IMovie[]): void\r\n  allMovies: IMovie[]\r\n}\r\n\r\nconst ModalMovieCard: React.FC<IModalMovieCardProps> = ({ setIsShowModal, isShowModal, currentShowMovie, setAllMovies, allMovies}) => {\r\n\r\n  const handleCloseModal = ():void => {\r\n    setIsShowModal(false)\r\n  }\r\n\r\n  return (\r\n    <Modal show={isShowModal} onHide={handleCloseModal} centered dialogClassName={styles.modal}>\r\n      <section className={styles.modal_wrapper}>\r\n        <img src={closeIconPath} role={'button'} tabIndex={0} alt={'close'} onClick={handleCloseModal}\r\n             className={styles.modal_close}/>\r\n        <img src={currentShowMovie.img} alt={currentShowMovie.name} className={styles.modal_image}/>\r\n        <div>\r\n          <h4>{currentShowMovie.name}</h4>\r\n          <p>{currentShowMovie.description}</p>\r\n        </div>\r\n        <div>\r\n          <div className='d-flex justify-content-between align-items-center'>\r\n            <ButtonStar setAllMovies={setAllMovies} active={currentShowMovie.active} id={currentShowMovie.id} allMovies={allMovies} modal={true}/>\r\n            <span className={styles.modal_year}>{currentShowMovie.year}</span>\r\n          </div>\r\n          <div className={styles.modal_genres}>\r\n            {currentShowMovie.genres && currentShowMovie.genres.map((genre:string, index:number) => (\r\n              <span key={`${genre}-${index}`}>{genre}</span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className={styles.modal_people}>\r\n          <span>Director: {currentShowMovie.director}</span>\r\n          <div className='mt-3'>\r\n            <span>Starring:&nbsp;</span>\r\n            {currentShowMovie.starring && currentShowMovie.starring.map((actor:string, index:number, array) => (\r\n              array.length === index + 1 ? (\r\n                <span key={`${actor}-${index}`}>{`${actor}`}</span>\r\n              ) : (\r\n                <span key={`${actor}-${index}`}>{`${actor},`}&nbsp;</span>\r\n              )\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalMovieCard\r\n","import React, { useState } from 'react'\r\n\r\nimport ModalMovieCard from './ModalMovieCard'\r\nimport ButtonStar from './ButtonStar'\r\n\r\nimport { IMovie } from '../interface'\r\n\r\nimport styles from './MoviesGallery.module.scss'\r\n\r\ninterface IMoviesGalleryProps  {\r\n  allMovies: IMovie[]\r\n  setAllMovies(arg:IMovie[]): void\r\n  filterGenre: string\r\n  filterMovie: any\r\n}\r\n\r\nconst MoviesGallery: React.FC<IMoviesGalleryProps> = ({ allMovies , setAllMovies, filterGenre, filterMovie}) => {\r\n  const [isShowModal, setIsShowModal] = useState<boolean>(false)\r\n  const [currentShowMovie, setCurrentShowMovie] = useState<Partial<IMovie>>({})\r\n\r\n  const handleOpenModal = (id: number): void => {\r\n    const foundMovieFromId = allMovies.find(movie => movie.id === id) as IMovie\r\n\r\n    setCurrentShowMovie(foundMovieFromId)\r\n    setIsShowModal(true)\r\n  }\r\n\r\n  return (\r\n    <main className={styles.wrapper}>\r\n      <h2>Movies Gallery</h2>\r\n      <div className={styles.movie_block}>\r\n        {filterMovie(allMovies, filterGenre).map((movie: IMovie) => (\r\n          <div className={styles.movie_card} key={movie.id} role='button' tabIndex={0}\r\n               onClick={() => handleOpenModal(movie.id)}>\r\n            <ButtonStar setAllMovies={setAllMovies} active={movie.active} id={movie.id} allMovies={allMovies} position={'absolute'}/>\r\n            <img src={movie.img} alt={movie.name}/>\r\n            <p>{movie.name}</p>\r\n            <span>{movie.year}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <ModalMovieCard\r\n        allMovies={allMovies}\r\n        setAllMovies={setAllMovies}\r\n        isShowModal={isShowModal}\r\n        setIsShowModal={setIsShowModal}\r\n        currentShowMovie={currentShowMovie}\r\n      />\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default MoviesGallery","import React from 'react'\r\n\r\nimport { IMovie } from '../interface'\r\nimport { setInLocalStorage } from '../lib'\r\n\r\nimport styles from './FavoriteListComponent.module.scss'\r\n\r\ntype FavoriteListComponent = {\r\n  allMovies: IMovie[]\r\n  setAllMovies(arg: IMovie[]): void\r\n  filterGenre: string\r\n  filterMovie: any\r\n}\r\n\r\nconst FavoriteListComponent: React.FC<FavoriteListComponent> = ({ allMovies , setAllMovies, filterGenre, filterMovie}) => {\r\n  const handleDeleteFavoriteFilm = (event: React.MouseEvent, id:number ) => {\r\n    const updateMovie = allMovies.map(movie => {\r\n      if (movie.id === id) {\r\n        setInLocalStorage(movie.name, false)\r\n        return {\r\n          ...movie,\r\n          active: false\r\n        }\r\n      }\r\n      return movie\r\n    })\r\n\r\n    setAllMovies(updateMovie)\r\n  }\r\n\r\n  return (\r\n    <aside className={`${styles.wrapper} d-none d-lg-block`}>\r\n      <h3>Favorite List</h3>\r\n      {filterMovie(allMovies, filterGenre).map((item:IMovie) => (\r\n        item.active && (\r\n          <div className={styles.favorite_item}>\r\n            <p key={`${item.name}_favorite-list`}>{item.name}</p>\r\n            <button className={styles.favorite_item_delete} onClick={(event => handleDeleteFavoriteFilm(event, item.id))}/>\r\n          </div>\r\n        )\r\n      ))}\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default FavoriteListComponent\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle'\r\n\r\nimport styles from './HeaderFavoriteList.module.scss'\r\nimport { IMovie } from '../interface'\r\nimport { setInLocalStorage } from '../lib'\r\n\r\ntype HeaderFavoriteListProps = {\r\n  allMovies: IMovie[]\r\n  setAllMovies(arg: IMovie[]): void\r\n}\r\n\r\nconst HeaderFavoriteList: React.FC<HeaderFavoriteListProps> = ({ allMovies, setAllMovies}) => {\r\n  const [activeFavoriteMovies, setActiveFavoriteMovies] = useState<IMovie[]>([])\r\n\r\n  useEffect(()=> {\r\n    const foundActive = allMovies.filter(movie => movie.active)\r\n    setActiveFavoriteMovies(foundActive)\r\n  },[allMovies])\r\n\r\n  const handleDeleteFavoriteFilm = (event: React.MouseEvent, id:number ) => {\r\n    const updateMovie = allMovies.map(movie => {\r\n      if (movie.id === id) {\r\n        setInLocalStorage(movie.name, false)\r\n        return {\r\n          ...movie,\r\n          active: false\r\n        }\r\n      }\r\n      return movie\r\n    })\r\n\r\n    setAllMovies(updateMovie)\r\n  }\r\n\r\n  return (\r\n    <header className={`${styles.header} d-lg-none`}>\r\n      <Accordion className={styles.accordion}>\r\n\r\n        <CustomToggle eventKey=\"0\">Favorite List</CustomToggle>\r\n\r\n        <Accordion.Collapse eventKey=\"0\">\r\n          <div className={styles.accordion_list_wrapper}>\r\n            {!!activeFavoriteMovies.length ? (\r\n              activeFavoriteMovies.map(item => (\r\n                item.active && (\r\n                  <div className={styles.accordion_list}>\r\n                    <p key={`${item.name}_favorite-list-header`}>{item.name}</p>\r\n                    <button className={styles.accordion_item_delete}\r\n                            onClick={(event => handleDeleteFavoriteFilm(event, item.id))}/>\r\n                  </div>\r\n                )\r\n              ))\r\n            ) : (\r\n              <p>No item</p>\r\n            )}\r\n          </div>\r\n        </Accordion.Collapse>\r\n\r\n      </Accordion>\r\n    </header>\r\n  )\r\n}\r\n\r\ntype CustomToggleProps = {\r\n  children: any\r\n  eventKey: string\r\n}\r\n\r\nconst CustomToggle: React.FC<CustomToggleProps> = ({ children, eventKey }) => {\r\n  const decoratedOnClick = useAccordionToggle(eventKey);\r\n\r\n  return (\r\n    <button\r\n      onClick={decoratedOnClick}\r\n      className={styles.accordion_button}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default HeaderFavoriteList","import React, { useEffect, useState } from 'react'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Dropdown from 'react-bootstrap/Dropdown'\n\nimport MoviesGallery from './components/MoviesGallery'\nimport FavoriteListComponent from './components/FavoriteListComponent'\nimport HeaderFavoriteList from './components/HeaderFavoriteList'\n\nimport { IMovie, ILocalStorageFavorite } from './interface'\n\nimport { mergeMovies, getAllGenres } from './lib'\n\nimport './App.scss'\n\nconst App: React.FC = () => {\n  const [allMovies, setAllMovies] = useState<IMovie[]>([])\n  const [errorMessage, setErrorMessage] = useState<string>('')\n  const [genres, setGenres] = useState<any>([])\n  const [filterGenre, setFilterGenre] = useState<string>('')\n\n  useEffect(()=> {\n    const url = 'https://my-json-server.typicode.com/moviedb-tech/movies/list'\n    const saved = JSON.parse(localStorage.getItem('favoriteList') || '{}') as ILocalStorageFavorite\n\n    const emptySaved = !(Object.keys(saved).length)\n\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        const foundGenres = getAllGenres(data)\n        setGenres(foundGenres)\n\n        if (!emptySaved) {\n          const processingData = mergeMovies(data, saved)\n          setAllMovies(processingData)\n        } else {\n          setAllMovies(data)\n        }\n      })\n      .catch(() => setErrorMessage('Something went wrong'))\n  }, [])\n\n  const filterMovie = (movie:IMovie[], genre:string) => {\n    if (!genre) {\n      return movie\n    } else {\n      return movie.filter(movie => movie.genres.find(item => item === genre))\n    }\n  }\n\n  return (\n    <Container className='position-relative'>\n      <Row>\n        <HeaderFavoriteList allMovies={allMovies} setAllMovies={setAllMovies}/>\n        <Col lg={9} xl={10}>\n          {!!allMovies.length ? (\n            <>\n              <DropdownButton\n                variant=\"outline-light\"\n                title={`${filterGenre ? filterGenre : 'Select genres'}`}\n                className='mb-3 mt-3'\n                size=\"lg\"\n              >\n                {filterGenre && (\n                  <Dropdown.Item onClick={()=>setFilterGenre('')}>All genres</Dropdown.Item>\n                )}\n                {genres.map((genre:string) => (\n                  <Dropdown.Item onClick={()=>setFilterGenre(genre)} key={genre}>{genre}</Dropdown.Item>\n                ))}\n              </DropdownButton>\n\n              <MoviesGallery allMovies={allMovies} setAllMovies={setAllMovies} filterGenre={filterGenre} filterMovie={filterMovie}/>\n            </>\n          ) : (\n            <p className='text-center'>Loading...</p>\n          )}\n        </Col>\n        <Col lg={3} xl={2} className='position-static'>\n          <FavoriteListComponent allMovies={allMovies} filterMovie={filterMovie} filterGenre={filterGenre} setAllMovies={setAllMovies}/>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}